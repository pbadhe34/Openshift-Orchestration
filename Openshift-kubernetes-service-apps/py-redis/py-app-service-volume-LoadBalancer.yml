apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  ports:
  - port: 6379
  selector:
    app: redis-pod
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
spec:  
  replicas: 1
  selector:
    matchLabels:
      app: redis-pod
  template:
    metadata:
      labels:
        app: redis-pod
    spec:
      volumes:
       - name: persistent-storage
         persistentVolumeClaim:
          claimName: redis-pv-claim
      containers:
      - name: redis-container
        image: redis
        ports:
        - containerPort: 6379
          name: redis-port
        volumeMounts:
          - name: persistent-storage
            mountPath: /data
---
apiVersion: v1
kind: Service
metadata:
  name: py-app-service-lb
spec:
  type: LoadBalancer
  ports:
  - port: 8090
  selector:
    app: py-app-pod
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: py-app-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: py-app-pod
  template:
    metadata:
      labels:
        app: py-app-pod
    spec:       
      containers:
      - name: py-app-container
        image: pbadhe34/my-apps:app1
        ports:
        - containerPort: 8090
        env:
          - name: redis #Connect to redis service host named as "redis"
            value: "redis-service"  #NOT used in app.py proocess: Has to reda as env variable in app.py

